文本样式
内部引用
<p style="color:red;font-size:50px;">xxxxxxxxxx</p>
<head>
	<meta charset="utf-8">
	<title>css样式</title>
	<style type="text/css">
p{color: green; font-style: italic/*倾斜或normal*/; font-weight: 500/*字体粗细0-900取整*/; font-size: 100px/*字体大小*/; font-family: 楷体;}
h1{font: normal 900 50px 宋体;}/*这个是连写*/
	</style>
</head>
<body>
	<h1>问候语</h1>
	<p>你好，大猫</p> 
</body>
外部引用 在外面建一个.css的层叠样式表p{color: green;font: 100px 楷体}
两个.css的表格可以相互引用 用@import url(style2.css);引用
<head>
	<meta charset="utf-8">
	<title>css样式</title>
	<link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
	<h1>问候语</h1>
	<p>你好，大猫</p> 
</body>
样式
<style type="text/css">
	h1{
/*颜色的四种表示方法*/
		color: rgb(123,56,148);
		color: rgba(44,55,66,0.4);
		color: #FF5566;
		color: #f56;
		
		text-decoration: line-through;
/*underline|overline|line-through|none*/
		text-align: center;
/*文本对齐样式left(默认)|center|right*/
		text-indent: 2em;
/*首行缩进，数字＋单位(px|em);这个单位可以是px可以是em(一个文字的宽度),用的最多的还是em*/
		text-shadow: 2px 2px 2px red;
/*水平偏移距离 垂直偏移距离 模糊距离 阴影颜色;*/
		width: 1000px;
 		white-space:nowrap; /*空白符处理
 		normal默认值,文字超出容器宽度会自动换行,容器会变高
 		nowrap,文字超出容器宽度不会换行文本会在同一行上溢出。*/
  			
  		text-overflow: clip;
  		overflow: hidden;
  /*文本溢出处理方式 clip剪贴ellipsis显示省略号...*/
  		word-wrap: normal;
  /*长单词换行到下一行 break-word单词换行*/
	}
</style>

选择器
类选择器
id选择器 交集,并集选择器
相邻兄弟选择器 通用兄弟选择器
<head>
	<meta charset="utf-8">
 	<title>选择器</title>
 	<style type="text/css">
		.dang{/*类选择器*/color: blue;}
		#a1{/*id选择器，页面上所有的ID不能重复*/color: green;}
		/*类和id只能以下划线和英文字符开头，ID不是用来作为选择器添加样式的，它的主要作用是给JS使用*/
		body h2{/*后代选择器，body标签下所有h2标签都会被执行*/font-size: 50px;}
		body>p{/*子选择器，body标签下的前三个p标签被选择*/font-family: 楷体;}
		p.dang{/*交集选择器，p标签前两个被选中*/font-style: italic;}
		p,.dang/*并集选择器，所有p和.dang都会被选中*/
		p+h2/*相邻兄弟选择器，选中的是第一个h2*/
		p~h2/*通用兄弟选择器，选中的是p的向下兄弟所有的h2标签*/
                选择器可以是标签，ID，类
 	</style>
 </head>
 <body>
 		<p class="dang">你有糖吗</p>
 		<p class="dang">你有糖吗</p>
 		<p id="a1">你有糖吗</p>
 	<nav>
 		<p>你有糖吗</p>
 		<h2 class="dang">你有糖吗</h2>
 		<h2>你有糖吗</h2>
 	</nav>
 </body>
序选择器
<head>
<meta charset="utf-8">
<title>13</title>
	<style type="text/css">
		p:first-child{    }
	/*找到同级别的第一个元素不区分类型7和12被选中*/
		p:last-child{   }
	/*找到同级别的最后一个元素不区分类型15被选中*/
		p:nth-child(n){color: red;}
	/*找到同级别的第n个元素不区分类型,n可以写为nx+y*/
		p:only-child{}
	/*不区分类型的同级别唯一元素*/
		p:first-of-type{color: red;}
	/*找到同级别的第一个元素区分类型2.7.12被选中*/
		p:last-of-type{  }
	/*找到同级别的最后一个元素区分类型6.10.15被选中*/
		p:nth-of-type(n){color: red;}
	</style>
</head>
<body>
	<h2>1</h2>
	<P>2</P>
	<P>3</P>
	<P>4</P>
	<P>5</P>
	<P>6</P>
	<div>
		<p>7</p>
		<p>8</p>
		<p>9</p>
		<p>10</p>
		<h2>11</h2>
		<ul>
			<li>
				<p>12</p>
				<p>13</p>
				<p>14</p>
				<p>15</p>
			</li>
		</ul>
	</div>
</body>
属性选择器
<head>
<title></title>
<style type="text/css">
	[title]{color: green}
	[title="qwert"]{color: red;}
	[title|="qwert"]{}
/*属性的值以qwert开始,只能选中用“-”分隔的和独立的,是CSS2中的选择器*/
	[title^="qwert"]{}
/*所有以qwert属性值开始的都可以选中,
是CSS3中的选择器*/
	[title$="qwert"]{}
/*所有以属性值结尾的都可以选中,是CSS3中的选择器*/
	[title~="qwert"]{}
/*属性值包括什么，只能选中包括用空格分隔的和独立的,是CSS2中的选择器*/
	[title*="qwert"]{}
/*所有包括该属性值的都可以选中,是CSS3中的选择器*/
</style>
</head>
<body>
	<a href="#" title="">title</a>
	<a href="#" title="qwert">qwert</a>
	<a href="#" title="qwert yu">qwert yu</a>
	<a href="#" title="qwert_yu">qwert-yu</a>
	<a href="#" title="aaa.qwert">aaa.qwert</a>
	<a href="#" title="aaa.qwert.www">aaa.qwert.www</a>
	<a href="#" title="qwertyuiop">qwertyuiop</a>
	<p>我是谁</p>
</body>
通用选择器 伪选择器
<head>
<title>1111</title>
<style type="text/css">
	*{color: red;}
/*通用选择器所有元素都被变红*/
	a:link{color: green}
/*默认状态*/
	a:visited{color: }
/*被访问过*/
	a:hover{color: }
/*鼠标悬停时*/
	a:active{color: }
/*鼠标点击时*/
/*四种状态可以同时都写，也可以单独写,如果全写的情况下必须遵循一定的顺序，特别是active要写到hover后面,否则就会被覆盖,因为点击的同时鼠标肯定是悬停在内容上的,hover对其他元素也起作用*/
	input:focus{outline-color: red;}
/*获取焦点边框颜色*/
	p:before{content: "你好"}
	p:after{content: "你好"}
/*在p标签的前后加上content*/
	</style>
</head>
<body>
	<h1>标题</h1>
	<p>段落</p>
	<a href="#">百度一下</a>
	<input type="text" name="text">
</body>